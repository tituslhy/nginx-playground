events {
    worker_connections 1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    
    # Explicitly list all 3 replicas
    upstream chainlit_app {
        # Docker Compose naming: <service>-<replica_number>
        server chainlit-1:8000;
        server chainlit-2:8000;
        server chainlit-3:8000;
        
        # Sticky sessions based on Socket.IO session ID
        # This uses nginx's built-in session persistence
        least_conn;
    }

    server {
        listen 8080;

        location /ws/ {
            proxy_pass http://chainlit_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_buffering off;
            proxy_cache off;
            
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            
            # CRITICAL: Sticky sessions via upstream keepalive
            proxy_set_header Connection "";
        }

        location / {
            proxy_pass http://chainlit_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}