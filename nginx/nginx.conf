events {
    worker_connections 1024;
}

http {
    # resolver 127.0.0.11 valid=30s;

    # map $http_upgrade $connection_upgrade {
    #     default upgrade;
    #     ''      close;
    # }
    
    # Explicitly list all 3 replicas
    # upstream chainlit_app {
    #     ip_hash;

    #     # Docker Compose naming: <service>-<replica_number>
    #     server chainlit-1:8000;
    #     server chainlit-2:8000;
    #     server chainlit-3:8000;

    #     keepalive 16;
    # }

    # This does not work for web sockets!
    upstream chainlit_app {
        # Docker Compose will create DNS records for each scaled service
        # NGINX will resolve 'chainlit' to the IP addresses of all replicas
        # The 'least_conn' method sends requests to the server with the fewest active connections
        least_conn;
        server chainlit:8000;
    }

    server {
        listen 8080;

        # location / {
        #     proxy_pass http://chainlit_app;
        #     proxy_http_version 1.1;

        #     proxy_set_header Host $host;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection $connection_upgrade;

        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;

        #     proxy_set_header Connection "";

        #     proxy_read_timeout 3600s;
        #     proxy_send_timeout 3600s;
        # }

        location / {
            # Pass requests to the upstream group defined above
            proxy_pass http://chainlit_app;

            # Set headers to pass necessary information to the Chainlit app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for Chainlit's interactive features
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}